- error = @device.errors.include?(:user_id)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :user_id, :class => 'control-label'
  div class='controls'
    = f.text_field :user_id, :class => 'form-control input-large input-with-feedback', :autofocus => true
    span class='help-inline' = error ? f.error_message_on(:user_id, :class => 'text-error') : pat(:example)
- error = @device.errors.include?(:device_token)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :device_token, :class => 'control-label'
  div class='controls'
    = f.text_field :device_token, :class => 'form-control input-large input-with-feedback'
    span class='help-inline' = error ? f.error_message_on(:device_token, :class => 'text-error') : pat(:example)
- error = @device.errors.include?(:device_name)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :device_name, :class => 'control-label'
  div class='controls'
    = f.text_field :device_name, :class => 'form-control input-large input-with-feedback'
    span class='help-inline' = error ? f.error_message_on(:device_name, :class => 'text-error') : pat(:example)
- error = @device.errors.include?(:model)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :model, :class => 'control-label'
  div class='controls'
    = f.text_field :model, :class => 'form-control input-large input-with-feedback'
    span class='help-inline' = error ? f.error_message_on(:model, :class => 'text-error') : pat(:example)
- error = @device.errors.include?(:system_version)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :system_version, :class => 'control-label'
  div class='controls'
    = f.text_field :system_version, :class => 'form-control input-large input-with-feedback'
    span class='help-inline' = error ? f.error_message_on(:system_version, :class => 'text-error') : pat(:example)
- error = @device.errors.include?(:app_version)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :app_version, :class => 'control-label'
  div class='controls'
    = f.text_field :app_version, :class => 'form-control input-large input-with-feedback'
    span class='help-inline' = error ? f.error_message_on(:app_version, :class => 'text-error') : pat(:example)
- error = @device.errors.include?(:app_bundle_version)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :app_bundle_version, :class => 'control-label'
  div class='controls'
    = f.text_field :app_bundle_version, :class => 'form-control input-large input-with-feedback'
    span class='help-inline' = error ? f.error_message_on(:app_bundle_version, :class => 'text-error') : pat(:example)
- error = @device.errors.include?(:locale)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :locale, :class => 'control-label'
  div class='controls'
    = f.text_field :locale, :class => 'form-control input-large input-with-feedback'
    span class='help-inline' = error ? f.error_message_on(:locale, :class => 'text-error') : pat(:example)
- error = @device.errors.include?(:development)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :development, :class => 'control-label'
  div class='controls'
    = f.check_box :development, :class => 'form-control input-large input-with-feedback'
    span class='help-inline' = error ? f.error_message_on(:development, :class => 'text-error') : pat(:example)
- error = @device.errors.include?(:inactive)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :inactive, :class => 'control-label'
  div class='controls'
    = f.check_box :inactive, :class => 'form-control input-large input-with-feedback'
    span class='help-inline' = error ? f.error_message_on(:inactive, :class => 'text-error') : pat(:example)

div class="form-actions"
  = f.submit pat(:save), :class => 'btn btn-primary'
  |&nbsp;
  = f.submit pat(:save_and_continue), :class => 'btn btn-info', :name => 'save_and_continue'
  |&nbsp;
  = link_to pat(:cancel), url(:devices, :index), :class => 'btn btn-default'